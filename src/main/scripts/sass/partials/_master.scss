/* Imports for all mixins and global project stuff */

html {
  font-size: 18px;
  font-family: sans-serif;
  -webkit-text-size-adjust: 100%;
}

body {
  margin: 0;
}

.hidden {
	display: none !important;
}

/* Measurement Abbreviations */
.lbs:before {
  content: 'lbs';
}

.kg:before {
  content: 'kg';
}

.ft:before {
  content: 'ft';
}

.in:before {
  content: 'in.';
}

.m:before {
  content: 'm';
}

.cm:before {
  content: 'cm';
}


@mixin align-items($to_where) {
  -webkit-align-items: $to_where;
  align-items: $to_where;
}

@mixin opacity-transition($time) {
  -webkit-transition: opacity $time;
     -moz-transition: opacity $time;
          transition: opacity $time;
}

@mixin backface-visibility($visibility) {
  -webkit-backface-visibility: $visibility;
     -moz-backface-visibility: $visibility;
          backface-visibility: $visibility;
}

@mixin transition-duration($time) {
  -webkit-transition-duration: $time;
     -moz-transition-duration: $time;
          transition-duration: $time;
}

@mixin animation-duration($time) {
  -webkit-animation-duration: $time;
     -moz-animation-duration: $time;
          animation-duration: $time;
}

@mixin animation-fill-mode($direction) {
  -webkit-animation-fill-mode: $direction;
          animation-fill-mode: $direction;
}

@mixin animation-timing-function($fn) {
  -webkit-animation-timing-function: $fn;
          animation-timing-function: $fn;
}

@mixin animation-name($name) {
  -webkit-animation-name: $name;
          animation-name: $name;
}

@mixin box-sizing($size) {
  -webkit-box-sizing: $size;
     -moz-box-sizing: $size;
          box-sizing: $size;
}

@mixin box-shadow($type, $x, $y, $z, $color) {
  -webkit-box-shadow: $type $x $y $z $color;
     -moz-box-shadow: $type $x $y $z $color;
          box-shadow: $type $x $y $z $color;
}

@mixin transition($transition1, $transition2:null) {
	@if $transition2 != null {
  -webkit-transition: $transition1, $transition2;
     -moz-transition: $transition1, $transition2;
          transition: $transition1, $transition2;
  } @else {
  -webkit-transition: $transition1;
     -moz-transition: $transition1;
          transition: $transition1;
  }
}

@mixin transition-transform($transition1, $transition2, $transform-time) {
  -webkit-transition: $transition1, $transition2, -webkit-transform $transform-time;
     -moz-transition: $transition1, $transition2,    -moz-transform $transform-time;
          transition: $transition1, $transition2,         transform $transform-time;
}

@mixin transform($type, $scale:null) {
	-webkit-transform: $type #{$scale};
	   -moz-transform: $type #{$scale};
	        transform: $type #{$scale};
}

@mixin delay($time) {
	-webkit-transition-delay: #{$time}s;
	   -moz-transition-delay: #{$time}s;
	        transition-delay: #{$time}s;
}