<ui:composition template="/WEB-INF/templates/animate.xhtml" xmlns="http://www.w3.org/1999/xhtml"
  xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:f="http://java.sun.com/jsf/core"
  xmlns:h="http://java.sun.com/jsf/html" xmlns:c="http://java.sun.com/jsp/jstl/core"
  xmlns:p="http://xmlns.jcp.org/jsf/passthrough">
  <ui:define name="title">
    <h:outputFormat value="#{msg.login}" />
  </ui:define>
  
  <ui:remove>
  The divs inside of these forms are formatted this way because whitespace ruins the formatting of it..
  So much fun, eh? These things probably would have been better formatted as a table. Since it really
  is row-ular data. But eh. It *works* now.
  </ui:remove>
  
  <ui:define name="content">
    <div class="container">
      <h:panelGroup rendered="#{requestScope['javax.servlet.forward.servlet_path'].contains('/j_security_check')}">
        <h:outputText value="#{msg.account_LoginError}" />
      </h:panelGroup>
      <div class="flip-container">
        <div class="flipper">
          <div id="login" class="account-form #{createAccountBean.loginCss}">
            <h2>#{msg.login}</h2>
            <form method="post" action="j_security_check" name="loginForm" class="one-line">
              <div>
                <div>
                </div><div>            
                  <p>
                    <h:outputLabel value="#{msg.username}" />
                    <h:inputText id="j_username" name="j_username" />
                  </p>
                </div><div>
                </div>
              </div>
              
              <div>
                <div>
                </div><div>
                  <p>
                    <h:outputLabel value="#{msg.password}" />
                    <h:inputSecret id="j_password" name="j_password" />
                  </p>
                </div><div>
                </div>
              </div>
              
              <div>
                <div>
                </div><div>
                  <h:commandButton value="#{msg.login}" />
                </div><div>
                </div>
              </div>
              <div>
                <div>
                </div><div>
                  <button type="button" onclick="flip()">#{msg.signup}</button>
                </div><div>
                </div>
              </div>
            </form>
          </div>
          <div id="signup" class="account-form #{createAccountBean.signupCss}">
            <h2>#{msg.signup}</h2>
            <h:form styleClass="one-line" p:autocomplete="off">
              <div>
                <div>
                </div><div>
                  <p>
                    <h:outputLabel value="#{msg.username}" />
                    <h:inputText id="username" value="#{createAccountBean.account.username}">
                      <f:ajax event="blur" execute="username" listener="#{createAccountBean.checkIsUsernameAvailable}"
                              render="username-available"  />
                    </h:inputText>
                  </p>
                </div><div><h:outputText id="username-available" value="#{createAccountBean.usernameAvailable}" />
                </div>
              </div>
              
              <div>
                <div>
                </div><div>
                  <p>
                    <h:outputLabel value="#{msg.password}" />
                    <h:inputSecret id="password" value="#{createAccountBean.account.unhashedPassword}" />
                  </p>
                </div><div>
                </div>
              </div>
              
              <div>
                <div>
                </div><div>
                  <p>
                    <h:outputLabel value="#{msg.passwordConfirm}" />
                    <h:inputSecret id="passwordConfirm" value="#{createAccountBean.confirmPassword}" />
                  </p>
                </div><div>
                </div>
              </div>
              
              <div>
                <div>
                </div><div>
                  <h:commandButton action="#{createAccountBean.createAccount()}" value="#{msg.createAccount}" />
                </div><div>
                </div>
              </div>
              
              <div>
                <div>
                </div><div>
                  <button type="button" onclick="flip()">#{msg.cancelSignup}</button>
                </div><div>
                </div>
              </div>
            </h:form>
          </div>
        </div>
      </div>
    </div>
    <h:outputScript library="js" name="accountValidation.js" />
  </ui:define>
</ui:composition>